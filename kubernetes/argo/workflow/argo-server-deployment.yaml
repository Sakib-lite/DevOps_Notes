apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"argo-server","namespace":"argo"},"spec":{"selector":{"matchLabels":{"app":"argo-server"}},"template":{"metadata":{"labels":{"app":"argo-server"}},"spec":{"containers":[{"args":["server"],"env":[],"image":"quay.io/argoproj/argocli:v3.5.4","name":"argo-server","ports":[{"containerPort":2746,"name":"web"}],"readinessProbe":{"httpGet":{"path":"/","port":2746,"scheme":"HTTPS"},"initialDelaySeconds":10,"periodSeconds":20},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true},"serviceAccountName":"argo-server","volumes":[{"emptyDir":{},"name":"tmp"}]}}}}
  creationTimestamp: "2024-06-26T17:21:12Z"
  generation: 2
  name: argo-server
  namespace: argo
  resourceVersion: "28716"
  uid: 85758cbc-6ccb-45bb-8238-13ceb8fede55
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: argo-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: argo-server
    spec:
      containers:
      - args:
        - server
        - --auth-mode=server
        - --secure=false
        - --access-control-allow-origin=*
        image: quay.io/argoproj/argocli:v3.5.4
        imagePullPolicy: IfNotPresent
        name: argo-server
        ports:
        - containerPort: 2746
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 2746
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: argo-server
      serviceAccountName: argo-server
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmp
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-06-26T17:21:12Z"
    lastUpdateTime: "2024-06-26T17:39:02Z"
    message: ReplicaSet "argo-server-55f668bdb8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-06-27T16:29:15Z"
    lastUpdateTime: "2024-06-27T16:29:15Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
